{"version":3,"sources":["component/Canvas.js","component/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Canvas","state","title","title_size","title_color","title_outline_color","subtitle","subtitle_color","subtitle_outline_color","canvas_style","backgroundColor","background_color","border","borderColor","outline_color","width","width_size","height","height_size","title_style","color","fontSize","Number","textShadow","subtitle_style","className","style","reducer","action","value","Content","useReducer","setState","onChange","e","target","id","type","placeholder","onClick","console","log","document","getElementById","domtoimage","toBlob","then","blob","window","saveAs","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f5bd250c.chunk.js","sourcesContent":["import './Css/Canvas.css'\r\n\r\nconst Canvas = ({state}) => {\r\n    const { title,title_size, title_color , title_outline_color ,subtitle, subtitle_color ,subtitle_outline_color,background_color,outline_color,width_size,height_size} = state;\r\n    // title,subtitle,background_color,outline_color,height_size,width_size\r\n    const canvas_style = {\r\n        backgroundColor: background_color,\r\n        border:'2px solid',\r\n        borderColor: outline_color,\r\n        width:width_size+'px', //width_size\r\n        height:height_size+'px',  //height_size\r\n    }\r\n    const title_style = {\r\n        color: title_color,\r\n        fontSize :  Number(title_size),\r\n        textShadow: '-1px 0 '+title_outline_color+', 0 1px '+title_outline_color+', 1px 0 '+title_outline_color+', 0 -1px '+title_outline_color,\r\n    }\r\n    const subtitle_style = {\r\n        color: subtitle_color,\r\n        textShadow: '-1px 0 '+subtitle_outline_color+', 0 1px '+subtitle_outline_color+', 1px 0 '+subtitle_outline_color+', 0 -1px '+subtitle_outline_color,\r\n    }\r\n    return (\r\n            <span className=\"canvas\" style={canvas_style}> \r\n                <p className='title' style={title_style}>{title}</p>\r\n                <p className='subtitle' style={subtitle_style}>{subtitle}</p>\r\n            </span>\r\n        )\r\n};\r\nexport default Canvas;","import Canvas from './Canvas'\r\nimport React, { useReducer } from 'react';\r\nimport './Css/Content.css'\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\n// import { jsPDF } from \"jspdf\";\r\n// import * as htmlToImage from 'html-to-image';\r\n// import download from 'download';\r\n\r\n// import { toPng, toJpeg, toBlob, toPixelData, toSvg } from 'html-to-image';\r\n// import { useState } from 'react'\r\n\r\nfunction reducer(state, action) {\r\n    return {\r\n        ...state,\r\n        [action.className]: action.value\r\n    };\r\n}\r\n\r\nconst Content = () => {\r\n    // const [myRef, setMyRef] = useState(React.createRef());\r\n    const [state, setState] = useReducer(reducer, {\r\n        title: '제목을 입력해주세요',\r\n        title_size: 32,\r\n        title_color: '#000000',\r\n        title_outline_color: '#ffffff',\r\n\r\n        subtitle: '부 제목을 입력해주세요',\r\n        subtitle_color: '#000000',\r\n        subtitle_outline_color: '#ffffff',\r\n\r\n        background_color: '#ffffff',\r\n        outline_color: '#000000',\r\n\r\n        width_size: '500',\r\n        height_size: '400',\r\n\r\n\r\n    });\r\n\r\n    //const { title, title_color , title_outline_color ,subtitle, subtitle_color ,subtitle_outline_color,background_color,outline_color,width_size,height_size} = state;\r\n    const onChange = e => {\r\n        setState(e.target);\r\n    };\r\n\r\n    const d = () => {\r\n        console.log(document.getElementById('image__'));\r\n\r\n    \r\n            domtoimage.toBlob(document.getElementById('image__'))\r\n                .then(function (blob) {\r\n                    window.saveAs(blob, 'image__.png');\r\n                });\r\n        \r\n        // domtoimage.toBlob(C).then(function (blob) {\r\n        //     window.saveAs(blob, 'image__.png');\r\n        // });\r\n    }\r\n\r\n    return (\r\n        <div className='content'>\r\n            <div className='frame'>\r\n                <div id=\"image__\">\r\n                    <Canvas state={state} className=\"canvas\" />\r\n                </div>\r\n            </div>\r\n            <div className='memu'>\r\n                {/* <p>Memu</p> */}\r\n\r\n                <div className='div_title'>\r\n                    <p className='samlltitle'>제목</p>\r\n                    제목 : <input className='title' type='text' placeholder=\"이곳에 제목을 입력해주세요\" onChange={onChange} />\r\n                    size : <input className='title_size' type='number' value={state.title_size} onChange={onChange} />\r\n                    <div className='div_title_option'>\r\n                        배경 색 : <input className='title_color' type='color' onChange={onChange} />\r\n                        윤곽선 색 : <input className='title_outline_color' type='color' onChange={onChange} />\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='div_subtitle'>\r\n                    <p className='samlltitle'>부제목</p>\r\n                    부제목 : <input className='subtitle' type='text' placeholder=\"이곳에 부제목을 입력해주세요\" onChange={onChange} />\r\n                    <div className='div_subtitle_option'>\r\n                        배경 색 :  <input className='subtitle_color' type='color' onChange={onChange} />\r\n                        윤곽선 색 :<input className='subtitle_outline_color' type='color' onChange={onChange} />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                <div className='div_color'>\r\n                    <p className='samlltitle'>배경</p>\r\n                    width : <input className='width_size' type='number' placeholder=\"가로 넓이\" value={state.width_size} onChange={onChange} />\r\n                    height : <input className='height_size' type='number' placeholder=\"세로 넓이\" value={state.height_size} onChange={onChange} /><br />\r\n                    배경 색 : <input className='background_color' type='color' onChange={onChange} />\r\n                    윤곽선 색 :<input className='outline_color' type='color' onChange={onChange} /><br />\r\n\r\n                </div>\r\n\r\n                <button onClick={d} className=\"button\"><span>이미지 다운로드</span></button>\r\n\r\n            </div>\r\n            {/* <p className='thumbnail'>thumbnail</p> */}\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n};\r\nexport default Content;","import './App.css';\nimport Content from './component/Content'\nfunction App() {\n    return ( \n    <div className = \"App\" >\n        <Content/>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}